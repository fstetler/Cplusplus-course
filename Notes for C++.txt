Remove letters in string: nameofstring.erase(startingpoint,length of erase)
Replace letters in string: nameofstring.substr(startingpoint,length of replace)
static_cast converts variables to other types
cin.ignore(32767,'\n'); efter en cin för att försäkra om att man inte skriver in fel input i cinen
if (cin.fail()) {cin.clear(); cin.ignore(32767,'\n');} efter en cin
sort an array: sort(begin(array), end(array)) där array[] = {40,30,50,10,20} tex
strlen() ger längden på en string, så "hello" ger 5
remove_prefix(1) and remove_suffix(2), "Peach" ger each samt Pea
int *iPtr{}, pointer, pekar till adressen för en variabel. int x{5}, ger pointern int *ptr{&x};
Använd nullptr ist för 0 för att initiera nollvärde i en pointer, int *ptr{nullptr};
Ist för att använda forloop kan man räkna med auto numVowels{count_if(begin(name), end(name), isVowel()};
Dynamically allocated variable pointer, int *ptr{ värde }, där värde är new int{7}, dvs int *ptr{ new int {7} };
När deleta dynamically allocated array, använd delete[] istället för delete
Initialize a dynamic array: int* array{new int[5] {9, 7, 5, 3, 1} };
Referencevariabel refererar till en annan variabel, int x{5}, int &ref{x}; Ger ut samma värde som x, bara en spegling. Ändrar man ref ändrar man x, så ref = 7 ger x = 7. Referencer kan inte reassignas
Struct är en samling variabler, som kan hämtas genom Struct Person{int age; double weight}; Person person; person.age = 5;
Skapa en array genom #include<array>, sen array myArray{1,2,3,4,5} defaultar till längd 5 type int. array myArray{7.5, 2.5} till längd 2 double osv 
vector<int> myVector {1,2,3,4,5}; Eller vector<int> myVector(5) för att skapa en tom 5-längdvektor
Find value in array: auto found{find(arr.begin(), arr.end(), search)}; där search är int värdet man letar efter. Skriva över värdet: *found = replace där replace är int värdet
Sortera en array: vector<Student> student(studentAmount); sort(student.begin(), student.end(), compareStudent) där compareStudent är function(const Student& a, const Student& b) med return a.grade > b.grade
arrays decay into pointers
Skapa array med 5 nollor: array<int,5> myArray{0};
Skapa vector med 5 nollor: vector<int> myVector{0,0,0,0,0};
längd av vector : myVec.size()
myVector.push_back(4) lägger en 4 längst bak i vektorn
myVector.insert(myVector.begin()+n, value), n = platsen där värdet ska in, value är värdet




